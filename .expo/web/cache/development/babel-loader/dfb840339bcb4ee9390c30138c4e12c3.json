{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nexport var NativeReanimated = function () {\n  function NativeReanimated() {\n    var native = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    _classCallCheck(this, NativeReanimated);\n\n    if (global.__reanimatedModuleProxy === undefined) {\n      var ReanimatedModule = NativeModules.ReanimatedModule;\n      ReanimatedModule === null || ReanimatedModule === void 0 ? void 0 : ReanimatedModule.installTurboModule();\n    }\n\n    this.InnerNativeModule = global.__reanimatedModuleProxy;\n    this.native = native;\n  }\n\n  _createClass(NativeReanimated, [{\n    key: \"installCoreFunctions\",\n    value: function installCoreFunctions(valueSetter) {\n      return this.InnerNativeModule.installCoreFunctions(valueSetter);\n    }\n  }, {\n    key: \"makeShareable\",\n    value: function makeShareable(value) {\n      return this.InnerNativeModule.makeShareable(value);\n    }\n  }, {\n    key: \"makeMutable\",\n    value: function makeMutable(value) {\n      return this.InnerNativeModule.makeMutable(value);\n    }\n  }, {\n    key: \"makeRemote\",\n    value: function makeRemote() {\n      var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.InnerNativeModule.makeRemote(object);\n    }\n  }, {\n    key: \"registerSensor\",\n    value: function registerSensor(sensorType, interval, sensorData) {\n      return this.InnerNativeModule.registerSensor(sensorType, interval, sensorData);\n    }\n  }, {\n    key: \"unregisterSensor\",\n    value: function unregisterSensor(sensorId) {\n      return this.InnerNativeModule.unregisterSensor(sensorId);\n    }\n  }, {\n    key: \"startMapper\",\n    value: function startMapper(mapper) {\n      var inputs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var outputs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var updater = arguments.length > 3 ? arguments[3] : undefined;\n      var viewDescriptors = arguments.length > 4 ? arguments[4] : undefined;\n      return this.InnerNativeModule.startMapper(mapper, inputs, outputs, updater, viewDescriptors);\n    }\n  }, {\n    key: \"stopMapper\",\n    value: function stopMapper(mapperId) {\n      return this.InnerNativeModule.stopMapper(mapperId);\n    }\n  }, {\n    key: \"registerEventHandler\",\n    value: function registerEventHandler(eventHash, eventHandler) {\n      return this.InnerNativeModule.registerEventHandler(eventHash, eventHandler);\n    }\n  }, {\n    key: \"unregisterEventHandler\",\n    value: function unregisterEventHandler(id) {\n      return this.InnerNativeModule.unregisterEventHandler(id);\n    }\n  }, {\n    key: \"getViewProp\",\n    value: function getViewProp(viewTag, propName, callback) {\n      return this.InnerNativeModule.getViewProp(viewTag, propName, callback);\n    }\n  }, {\n    key: \"enableLayoutAnimations\",\n    value: function enableLayoutAnimations(flag) {\n      this.InnerNativeModule.enableLayoutAnimations(flag);\n    }\n  }, {\n    key: \"configureProps\",\n    value: function configureProps(uiProps, nativeProps) {\n      this.InnerNativeModule.configureProps(uiProps, nativeProps);\n    }\n  }]);\n\n  return NativeReanimated;\n}();","map":{"version":3,"sources":["D:/Drive/Shubham/Expo/Team Voting (Forked)/Team-Voting/node_modules/react-native-reanimated/lib/reanimated2/NativeReanimated/NativeReanimated.js"],"names":["NativeReanimated","native","global","__reanimatedModuleProxy","undefined","ReanimatedModule","NativeModules","installTurboModule","InnerNativeModule","valueSetter","installCoreFunctions","value","makeShareable","makeMutable","object","makeRemote","sensorType","interval","sensorData","registerSensor","sensorId","unregisterSensor","mapper","inputs","outputs","updater","viewDescriptors","startMapper","mapperId","stopMapper","eventHash","eventHandler","registerEventHandler","id","unregisterEventHandler","viewTag","propName","callback","getViewProp","flag","enableLayoutAnimations","uiProps","nativeProps","configureProps"],"mappings":";;;AACA,WAAaA,gBAAb;AACI,8BAA2B;AAAA,QAAfC,MAAe,uEAAN,IAAM;;AAAA;;AACvB,QAAIC,MAAM,CAACC,uBAAP,KAAmCC,SAAvC,EAAkD;AAC9C,UAAQC,gBAAR,GAA6BC,aAA7B,CAAQD,gBAAR;AACAA,MAAAA,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAACE,kBAAjB,EAApE;AACH;;AACD,SAAKC,iBAAL,GAAyBN,MAAM,CAACC,uBAAhC;AACA,SAAKF,MAAL,GAAcA,MAAd;AACH;;AARL;AAAA;AAAA,WASI,8BAAqBQ,WAArB,EAAkC;AAC9B,aAAO,KAAKD,iBAAL,CAAuBE,oBAAvB,CAA4CD,WAA5C,CAAP;AACH;AAXL;AAAA;AAAA,WAYI,uBAAcE,KAAd,EAAqB;AACjB,aAAO,KAAKH,iBAAL,CAAuBI,aAAvB,CAAqCD,KAArC,CAAP;AACH;AAdL;AAAA;AAAA,WAeI,qBAAYA,KAAZ,EAAmB;AACf,aAAO,KAAKH,iBAAL,CAAuBK,WAAvB,CAAmCF,KAAnC,CAAP;AACH;AAjBL;AAAA;AAAA,WAkBI,sBAAwB;AAAA,UAAbG,MAAa,uEAAJ,EAAI;AACpB,aAAO,KAAKN,iBAAL,CAAuBO,UAAvB,CAAkCD,MAAlC,CAAP;AACH;AApBL;AAAA;AAAA,WAqBI,wBAAeE,UAAf,EAA2BC,QAA3B,EAAqCC,UAArC,EAAiD;AAC7C,aAAO,KAAKV,iBAAL,CAAuBW,cAAvB,CAAsCH,UAAtC,EAAkDC,QAAlD,EAA4DC,UAA5D,CAAP;AACH;AAvBL;AAAA;AAAA,WAwBI,0BAAiBE,QAAjB,EAA2B;AACvB,aAAO,KAAKZ,iBAAL,CAAuBa,gBAAvB,CAAwCD,QAAxC,CAAP;AACH;AA1BL;AAAA;AAAA,WA2BI,qBAAYE,MAAZ,EAAyE;AAAA,UAArDC,MAAqD,uEAA5C,EAA4C;AAAA,UAAxCC,OAAwC,uEAA9B,EAA8B;AAAA,UAA1BC,OAA0B;AAAA,UAAjBC,eAAiB;AACrE,aAAO,KAAKlB,iBAAL,CAAuBmB,WAAvB,CAAmCL,MAAnC,EAA2CC,MAA3C,EAAmDC,OAAnD,EAA4DC,OAA5D,EAAqEC,eAArE,CAAP;AACH;AA7BL;AAAA;AAAA,WA8BI,oBAAWE,QAAX,EAAqB;AACjB,aAAO,KAAKpB,iBAAL,CAAuBqB,UAAvB,CAAkCD,QAAlC,CAAP;AACH;AAhCL;AAAA;AAAA,WAiCI,8BAAqBE,SAArB,EAAgCC,YAAhC,EAA8C;AAC1C,aAAO,KAAKvB,iBAAL,CAAuBwB,oBAAvB,CAA4CF,SAA5C,EAAuDC,YAAvD,CAAP;AACH;AAnCL;AAAA;AAAA,WAoCI,gCAAuBE,EAAvB,EAA2B;AACvB,aAAO,KAAKzB,iBAAL,CAAuB0B,sBAAvB,CAA8CD,EAA9C,CAAP;AACH;AAtCL;AAAA;AAAA,WAuCI,qBAAYE,OAAZ,EAAqBC,QAArB,EAA+BC,QAA/B,EAAyC;AACrC,aAAO,KAAK7B,iBAAL,CAAuB8B,WAAvB,CAAmCH,OAAnC,EAA4CC,QAA5C,EAAsDC,QAAtD,CAAP;AACH;AAzCL;AAAA;AAAA,WA0CI,gCAAuBE,IAAvB,EAA6B;AACzB,WAAK/B,iBAAL,CAAuBgC,sBAAvB,CAA8CD,IAA9C;AACH;AA5CL;AAAA;AAAA,WA6CI,wBAAeE,OAAf,EAAwBC,WAAxB,EAAqC;AACjC,WAAKlC,iBAAL,CAAuBmC,cAAvB,CAAsCF,OAAtC,EAA+CC,WAA/C;AACH;AA/CL;;AAAA;AAAA","sourcesContent":["import { NativeModules } from 'react-native';\nexport class NativeReanimated {\n    constructor(native = true) {\n        if (global.__reanimatedModuleProxy === undefined) {\n            const { ReanimatedModule } = NativeModules;\n            ReanimatedModule === null || ReanimatedModule === void 0 ? void 0 : ReanimatedModule.installTurboModule();\n        }\n        this.InnerNativeModule = global.__reanimatedModuleProxy;\n        this.native = native;\n    }\n    installCoreFunctions(valueSetter) {\n        return this.InnerNativeModule.installCoreFunctions(valueSetter);\n    }\n    makeShareable(value) {\n        return this.InnerNativeModule.makeShareable(value);\n    }\n    makeMutable(value) {\n        return this.InnerNativeModule.makeMutable(value);\n    }\n    makeRemote(object = {}) {\n        return this.InnerNativeModule.makeRemote(object);\n    }\n    registerSensor(sensorType, interval, sensorData) {\n        return this.InnerNativeModule.registerSensor(sensorType, interval, sensorData);\n    }\n    unregisterSensor(sensorId) {\n        return this.InnerNativeModule.unregisterSensor(sensorId);\n    }\n    startMapper(mapper, inputs = [], outputs = [], updater, viewDescriptors) {\n        return this.InnerNativeModule.startMapper(mapper, inputs, outputs, updater, viewDescriptors);\n    }\n    stopMapper(mapperId) {\n        return this.InnerNativeModule.stopMapper(mapperId);\n    }\n    registerEventHandler(eventHash, eventHandler) {\n        return this.InnerNativeModule.registerEventHandler(eventHash, eventHandler);\n    }\n    unregisterEventHandler(id) {\n        return this.InnerNativeModule.unregisterEventHandler(id);\n    }\n    getViewProp(viewTag, propName, callback) {\n        return this.InnerNativeModule.getViewProp(viewTag, propName, callback);\n    }\n    enableLayoutAnimations(flag) {\n        this.InnerNativeModule.enableLayoutAnimations(flag);\n    }\n    configureProps(uiProps, nativeProps) {\n        this.InnerNativeModule.configureProps(uiProps, nativeProps);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}