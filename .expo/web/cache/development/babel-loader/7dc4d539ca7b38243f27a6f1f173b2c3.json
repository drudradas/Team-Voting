{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { withTiming, withSpring } from \"../../animation\";\nimport { BaseAnimationBuilder } from \"./BaseAnimationBuilder\";\nexport var ComplexAnimationBuilder = function (_BaseAnimationBuilder) {\n  _inherits(ComplexAnimationBuilder, _BaseAnimationBuilder);\n\n  var _super = _createSuper(ComplexAnimationBuilder);\n\n  function ComplexAnimationBuilder() {\n    _classCallCheck(this, ComplexAnimationBuilder);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ComplexAnimationBuilder, [{\n    key: \"easing\",\n    value: function easing(easingFunction) {\n      this.easingV = easingFunction;\n      return this;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(degree) {\n      this.rotateV = degree;\n      return this;\n    }\n  }, {\n    key: \"springify\",\n    value: function springify() {\n      this.type = withSpring;\n      return this;\n    }\n  }, {\n    key: \"damping\",\n    value: function damping(_damping2) {\n      this.dampingV = _damping2;\n      return this;\n    }\n  }, {\n    key: \"mass\",\n    value: function mass(_mass2) {\n      this.massV = _mass2;\n      return this;\n    }\n  }, {\n    key: \"stiffness\",\n    value: function stiffness(_stiffness2) {\n      this.stiffnessV = _stiffness2;\n      return this;\n    }\n  }, {\n    key: \"overshootClamping\",\n    value: function overshootClamping(_overshootClamping2) {\n      this.overshootClampingV = _overshootClamping2;\n      return this;\n    }\n  }, {\n    key: \"restDisplacementThreshold\",\n    value: function restDisplacementThreshold(_restDisplacementThreshold2) {\n      this.restDisplacementThresholdV = _restDisplacementThreshold2;\n      return this;\n    }\n  }, {\n    key: \"restSpeedThreshold\",\n    value: function restSpeedThreshold(_restSpeedThreshold2) {\n      this.restSpeedThresholdV = _restSpeedThreshold2;\n      return this;\n    }\n  }, {\n    key: \"withInitialValues\",\n    value: function withInitialValues(values) {\n      this.initialValues = values;\n      return this;\n    }\n  }, {\n    key: \"getAnimationAndConfig\",\n    value: function getAnimationAndConfig() {\n      var duration = this.durationV;\n      var easing = this.easingV;\n      var rotate = this.rotateV;\n      var type = this.type ? this.type : withTiming;\n      var damping = this.dampingV;\n      var mass = this.massV;\n      var stiffness = this.stiffnessV;\n      var overshootClamping = this.overshootClampingV;\n      var restDisplacementThreshold = this.restDisplacementThresholdV;\n      var restSpeedThreshold = this.restSpeedThresholdV;\n      var animation = type;\n      var config = {};\n\n      if (type === withTiming) {\n        if (easing) {\n          config.easing = easing;\n        }\n\n        if (duration) {\n          config.duration = duration;\n        }\n\n        if (rotate) {\n          config.rotate = rotate;\n        }\n      } else {\n        if (damping) {\n          config.damping = damping;\n        }\n\n        if (mass) {\n          config.mass = mass;\n        }\n\n        if (stiffness) {\n          config.stiffness = stiffness;\n        }\n\n        if (overshootClamping) {\n          config.overshootClamping = overshootClamping;\n        }\n\n        if (restDisplacementThreshold) {\n          config.restDisplacementThreshold = restDisplacementThreshold;\n        }\n\n        if (restSpeedThreshold) {\n          config.restSpeedThreshold = restSpeedThreshold;\n        }\n\n        if (rotate) {\n          config.rotate = rotate;\n        }\n      }\n\n      return [animation, config];\n    }\n  }], [{\n    key: \"easing\",\n    value: function easing(easingFunction) {\n      var instance = this.createInstance();\n      return instance.easing(easingFunction);\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(degree) {\n      var instance = this.createInstance();\n      return instance.rotate(degree);\n    }\n  }, {\n    key: \"springify\",\n    value: function springify() {\n      var instance = this.createInstance();\n      return instance.springify();\n    }\n  }, {\n    key: \"damping\",\n    value: function damping(_damping) {\n      var instance = this.createInstance();\n      return instance.damping(_damping);\n    }\n  }, {\n    key: \"mass\",\n    value: function mass(_mass) {\n      var instance = this.createInstance();\n      return instance.mass(_mass);\n    }\n  }, {\n    key: \"stiffness\",\n    value: function stiffness(_stiffness) {\n      var instance = this.createInstance();\n      return instance.stiffness(_stiffness);\n    }\n  }, {\n    key: \"overshootClamping\",\n    value: function overshootClamping(_overshootClamping) {\n      var instance = this.createInstance();\n      return instance.overshootClamping(_overshootClamping);\n    }\n  }, {\n    key: \"restDisplacementThreshold\",\n    value: function restDisplacementThreshold(_restDisplacementThreshold) {\n      var instance = this.createInstance();\n      return instance.restDisplacementThreshold(_restDisplacementThreshold);\n    }\n  }, {\n    key: \"restSpeedThreshold\",\n    value: function restSpeedThreshold(_restSpeedThreshold) {\n      var instance = this.createInstance();\n      return instance.restSpeedThreshold(_restSpeedThreshold);\n    }\n  }, {\n    key: \"withInitialValues\",\n    value: function withInitialValues(values) {\n      var instance = this.createInstance();\n      return instance.withInitialValues(values);\n    }\n  }]);\n\n  return ComplexAnimationBuilder;\n}(BaseAnimationBuilder);","map":{"version":3,"sources":["D:/Drive/Shubham/Expo/Team Voting (Forked)/Team-Voting/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/animationBuilder/ComplexAnimationBuilder.js"],"names":["withTiming","withSpring","BaseAnimationBuilder","ComplexAnimationBuilder","easingFunction","easingV","degree","rotateV","type","damping","dampingV","mass","massV","stiffness","stiffnessV","overshootClamping","overshootClampingV","restDisplacementThreshold","restDisplacementThresholdV","restSpeedThreshold","restSpeedThresholdV","values","initialValues","duration","durationV","easing","rotate","animation","config","instance","createInstance","springify","withInitialValues"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,UAArB;AACA,SAASC,oBAAT;AACA,WAAaC,uBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAKI,gBAAOC,cAAP,EAAuB;AACnB,WAAKC,OAAL,GAAeD,cAAf;AACA,aAAO,IAAP;AACH;AARL;AAAA;AAAA,WAaI,gBAAOE,MAAP,EAAe;AACX,WAAKC,OAAL,GAAeD,MAAf;AACA,aAAO,IAAP;AACH;AAhBL;AAAA;AAAA,WAqBI,qBAAY;AACR,WAAKE,IAAL,GAAYP,UAAZ;AACA,aAAO,IAAP;AACH;AAxBL;AAAA;AAAA,WA6BI,iBAAQQ,SAAR,EAAiB;AACb,WAAKC,QAAL,GAAgBD,SAAhB;AACA,aAAO,IAAP;AACH;AAhCL;AAAA;AAAA,WAqCI,cAAKE,MAAL,EAAW;AACP,WAAKC,KAAL,GAAaD,MAAb;AACA,aAAO,IAAP;AACH;AAxCL;AAAA;AAAA,WA6CI,mBAAUE,WAAV,EAAqB;AACjB,WAAKC,UAAL,GAAkBD,WAAlB;AACA,aAAO,IAAP;AACH;AAhDL;AAAA;AAAA,WAqDI,2BAAkBE,mBAAlB,EAAqC;AACjC,WAAKC,kBAAL,GAA0BD,mBAA1B;AACA,aAAO,IAAP;AACH;AAxDL;AAAA;AAAA,WA6DI,mCAA0BE,2BAA1B,EAAqD;AACjD,WAAKC,0BAAL,GAAkCD,2BAAlC;AACA,aAAO,IAAP;AACH;AAhEL;AAAA;AAAA,WAqEI,4BAAmBE,oBAAnB,EAAuC;AACnC,WAAKC,mBAAL,GAA2BD,oBAA3B;AACA,aAAO,IAAP;AACH;AAxEL;AAAA;AAAA,WA6EI,2BAAkBE,MAAlB,EAA0B;AACtB,WAAKC,aAAL,GAAqBD,MAArB;AACA,aAAO,IAAP;AACH;AAhFL;AAAA;AAAA,WAiFI,iCAAwB;AACpB,UAAME,QAAQ,GAAG,KAAKC,SAAtB;AACA,UAAMC,MAAM,GAAG,KAAKpB,OAApB;AACA,UAAMqB,MAAM,GAAG,KAAKnB,OAApB;AACA,UAAMC,IAAI,GAAG,KAAKA,IAAL,GAAY,KAAKA,IAAjB,GAAwBR,UAArC;AACA,UAAMS,OAAO,GAAG,KAAKC,QAArB;AACA,UAAMC,IAAI,GAAG,KAAKC,KAAlB;AACA,UAAMC,SAAS,GAAG,KAAKC,UAAvB;AACA,UAAMC,iBAAiB,GAAG,KAAKC,kBAA/B;AACA,UAAMC,yBAAyB,GAAG,KAAKC,0BAAvC;AACA,UAAMC,kBAAkB,GAAG,KAAKC,mBAAhC;AACA,UAAMO,SAAS,GAAGnB,IAAlB;AACA,UAAMoB,MAAM,GAAG,EAAf;;AACA,UAAIpB,IAAI,KAAKR,UAAb,EAAyB;AACrB,YAAIyB,MAAJ,EAAY;AACRG,UAAAA,MAAM,CAACH,MAAP,GAAgBA,MAAhB;AACH;;AACD,YAAIF,QAAJ,EAAc;AACVK,UAAAA,MAAM,CAACL,QAAP,GAAkBA,QAAlB;AACH;;AACD,YAAIG,MAAJ,EAAY;AACRE,UAAAA,MAAM,CAACF,MAAP,GAAgBA,MAAhB;AACH;AACJ,OAVD,MAWK;AACD,YAAIjB,OAAJ,EAAa;AACTmB,UAAAA,MAAM,CAACnB,OAAP,GAAiBA,OAAjB;AACH;;AACD,YAAIE,IAAJ,EAAU;AACNiB,UAAAA,MAAM,CAACjB,IAAP,GAAcA,IAAd;AACH;;AACD,YAAIE,SAAJ,EAAe;AACXe,UAAAA,MAAM,CAACf,SAAP,GAAmBA,SAAnB;AACH;;AACD,YAAIE,iBAAJ,EAAuB;AACnBa,UAAAA,MAAM,CAACb,iBAAP,GAA2BA,iBAA3B;AACH;;AACD,YAAIE,yBAAJ,EAA+B;AAC3BW,UAAAA,MAAM,CAACX,yBAAP,GAAmCA,yBAAnC;AACH;;AACD,YAAIE,kBAAJ,EAAwB;AACpBS,UAAAA,MAAM,CAACT,kBAAP,GAA4BA,kBAA5B;AACH;;AACD,YAAIO,MAAJ,EAAY;AACRE,UAAAA,MAAM,CAACF,MAAP,GAAgBA,MAAhB;AACH;AACJ;;AACD,aAAO,CAACC,SAAD,EAAYC,MAAZ,CAAP;AACH;AAjIL;AAAA;AAAA,WACI,gBAAcxB,cAAd,EAA8B;AAC1B,UAAMyB,QAAQ,GAAG,KAAKC,cAAL,EAAjB;AACA,aAAOD,QAAQ,CAACJ,MAAT,CAAgBrB,cAAhB,CAAP;AACH;AAJL;AAAA;AAAA,WASI,gBAAcE,MAAd,EAAsB;AAClB,UAAMuB,QAAQ,GAAG,KAAKC,cAAL,EAAjB;AACA,aAAOD,QAAQ,CAACH,MAAT,CAAgBpB,MAAhB,CAAP;AACH;AAZL;AAAA;AAAA,WAiBI,qBAAmB;AACf,UAAMuB,QAAQ,GAAG,KAAKC,cAAL,EAAjB;AACA,aAAOD,QAAQ,CAACE,SAAT,EAAP;AACH;AApBL;AAAA;AAAA,WAyBI,iBAAetB,QAAf,EAAwB;AACpB,UAAMoB,QAAQ,GAAG,KAAKC,cAAL,EAAjB;AACA,aAAOD,QAAQ,CAACpB,OAAT,CAAiBA,QAAjB,CAAP;AACH;AA5BL;AAAA;AAAA,WAiCI,cAAYE,KAAZ,EAAkB;AACd,UAAMkB,QAAQ,GAAG,KAAKC,cAAL,EAAjB;AACA,aAAOD,QAAQ,CAAClB,IAAT,CAAcA,KAAd,CAAP;AACH;AApCL;AAAA;AAAA,WAyCI,mBAAiBE,UAAjB,EAA4B;AACxB,UAAMgB,QAAQ,GAAG,KAAKC,cAAL,EAAjB;AACA,aAAOD,QAAQ,CAAChB,SAAT,CAAmBA,UAAnB,CAAP;AACH;AA5CL;AAAA;AAAA,WAiDI,2BAAyBE,kBAAzB,EAA4C;AACxC,UAAMc,QAAQ,GAAG,KAAKC,cAAL,EAAjB;AACA,aAAOD,QAAQ,CAACd,iBAAT,CAA2BA,kBAA3B,CAAP;AACH;AApDL;AAAA;AAAA,WAyDI,mCAAiCE,0BAAjC,EAA4D;AACxD,UAAMY,QAAQ,GAAG,KAAKC,cAAL,EAAjB;AACA,aAAOD,QAAQ,CAACZ,yBAAT,CAAmCA,0BAAnC,CAAP;AACH;AA5DL;AAAA;AAAA,WAiEI,4BAA0BE,mBAA1B,EAA8C;AAC1C,UAAMU,QAAQ,GAAG,KAAKC,cAAL,EAAjB;AACA,aAAOD,QAAQ,CAACV,kBAAT,CAA4BA,mBAA5B,CAAP;AACH;AApEL;AAAA;AAAA,WAyEI,2BAAyBE,MAAzB,EAAiC;AAC7B,UAAMQ,QAAQ,GAAG,KAAKC,cAAL,EAAjB;AACA,aAAOD,QAAQ,CAACG,iBAAT,CAA2BX,MAA3B,CAAP;AACH;AA5EL;;AAAA;AAAA,EAA6CnB,oBAA7C","sourcesContent":["import { withTiming, withSpring } from '../../animation';\nimport { BaseAnimationBuilder } from './BaseAnimationBuilder';\nexport class ComplexAnimationBuilder extends BaseAnimationBuilder {\n    static easing(easingFunction) {\n        const instance = this.createInstance();\n        return instance.easing(easingFunction);\n    }\n    easing(easingFunction) {\n        this.easingV = easingFunction;\n        return this;\n    }\n    static rotate(degree) {\n        const instance = this.createInstance();\n        return instance.rotate(degree);\n    }\n    rotate(degree) {\n        this.rotateV = degree;\n        return this;\n    }\n    static springify() {\n        const instance = this.createInstance();\n        return instance.springify();\n    }\n    springify() {\n        this.type = withSpring;\n        return this;\n    }\n    static damping(damping) {\n        const instance = this.createInstance();\n        return instance.damping(damping);\n    }\n    damping(damping) {\n        this.dampingV = damping;\n        return this;\n    }\n    static mass(mass) {\n        const instance = this.createInstance();\n        return instance.mass(mass);\n    }\n    mass(mass) {\n        this.massV = mass;\n        return this;\n    }\n    static stiffness(stiffness) {\n        const instance = this.createInstance();\n        return instance.stiffness(stiffness);\n    }\n    stiffness(stiffness) {\n        this.stiffnessV = stiffness;\n        return this;\n    }\n    static overshootClamping(overshootClamping) {\n        const instance = this.createInstance();\n        return instance.overshootClamping(overshootClamping);\n    }\n    overshootClamping(overshootClamping) {\n        this.overshootClampingV = overshootClamping;\n        return this;\n    }\n    static restDisplacementThreshold(restDisplacementThreshold) {\n        const instance = this.createInstance();\n        return instance.restDisplacementThreshold(restDisplacementThreshold);\n    }\n    restDisplacementThreshold(restDisplacementThreshold) {\n        this.restDisplacementThresholdV = restDisplacementThreshold;\n        return this;\n    }\n    static restSpeedThreshold(restSpeedThreshold) {\n        const instance = this.createInstance();\n        return instance.restSpeedThreshold(restSpeedThreshold);\n    }\n    restSpeedThreshold(restSpeedThreshold) {\n        this.restSpeedThresholdV = restSpeedThreshold;\n        return this;\n    }\n    static withInitialValues(values) {\n        const instance = this.createInstance();\n        return instance.withInitialValues(values);\n    }\n    withInitialValues(values) {\n        this.initialValues = values;\n        return this;\n    }\n    getAnimationAndConfig() {\n        const duration = this.durationV;\n        const easing = this.easingV;\n        const rotate = this.rotateV;\n        const type = this.type ? this.type : withTiming;\n        const damping = this.dampingV;\n        const mass = this.massV;\n        const stiffness = this.stiffnessV;\n        const overshootClamping = this.overshootClampingV;\n        const restDisplacementThreshold = this.restDisplacementThresholdV;\n        const restSpeedThreshold = this.restSpeedThresholdV;\n        const animation = type;\n        const config = {};\n        if (type === withTiming) {\n            if (easing) {\n                config.easing = easing;\n            }\n            if (duration) {\n                config.duration = duration;\n            }\n            if (rotate) {\n                config.rotate = rotate;\n            }\n        }\n        else {\n            if (damping) {\n                config.damping = damping;\n            }\n            if (mass) {\n                config.mass = mass;\n            }\n            if (stiffness) {\n                config.stiffness = stiffness;\n            }\n            if (overshootClamping) {\n                config.overshootClamping = overshootClamping;\n            }\n            if (restDisplacementThreshold) {\n                config.restDisplacementThreshold = restDisplacementThreshold;\n            }\n            if (restSpeedThreshold) {\n                config.restSpeedThreshold = restSpeedThreshold;\n            }\n            if (rotate) {\n                config.rotate = rotate;\n            }\n        }\n        return [animation, config];\n    }\n}\n"]},"metadata":{},"sourceType":"module"}